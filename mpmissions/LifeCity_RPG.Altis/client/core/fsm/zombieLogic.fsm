/*%FSM<COMPILE "D:\Bohemia Interactive\Tools\FSM Editor Personal Edition\scriptedFSM.cfg, pogomansZombieLogic1.0">*/
/*%FSM<HEAD>*/
/*
item0[] = {"Idle",3,250,-550.000000,-125.000000,-450.000000,-75.000000,0.000000,"Idle"};
item1[] = {"",7,210,-30.000000,-425.000000,-20.000000,-425.000000,0.000000,""};
item2[] = {"Has_Target_",4,218,-400.000000,-175.000000,-300.000000,-125.000000,0.000000,"Has Target?"};
item3[] = {"START",0,250,-850.000000,-125.000000,-750.000000,-75.000000,0.000000,"START"};
item4[] = {"_",8,218,-700.000000,-125.000000,-600.000000,-75.000000,0.000000,""};
item5[] = {"Wrong_Direction",4,218,-450.000000,0.000000,-350.000000,50.000000,2.000000,"Wrong" \n "Direction?"};
item6[] = {"Reached_Target_",4,218,-250.000000,-250.000000,-150.000000,-200.000000,4.000000,"Reached" \n "Target?"};
item7[] = {"Attack",2,250,-250.000000,-350.000000,-150.000000,-300.000000,0.000000,"Attack"};
item8[] = {"Hit_",4,218,-100.000000,-250.000000,0.000000,-200.000000,0.000000,"Hit?"};
item9[] = {"Chase",2,4346,-250.000000,-125.000000,-150.000000,-75.000000,0.000000,"Chase"};
item10[] = {"No_Target_",4,218,-400.000000,-75.000000,-300.000000,-25.000000,5.000000,"No Target?"};
item11[] = {"Dead_",4,218,-400.000000,-250.000000,-300.000000,-200.000000,6.000000,"Dead?"};
item12[] = {"END",1,250,-625.000000,-250.000000,-525.000000,-200.000000,0.000000,"END"};
item13[] = {"Attack_Finished",4,218,-50.000000,0.000000,50.000000,50.000000,3.000000,"Attack" \n "Finished?"};
item14[] = {"Find_Path",2,250,100.000000,-125.000000,200.000000,-75.000000,0.000000,"Find Path"};
item15[] = {"Path_Blocked_",4,218,-75.000000,-125.000000,25.000000,-75.000000,0.000000,"Path" \n "Blocked?"};
item16[] = {"Try_Left",4,218,275.000000,-200.000000,375.000000,-150.000000,0.000000,"Try" \n "Left"};
item17[] = {"Try_Right",4,218,275.000000,-50.000000,375.000000,0.000000,0.000000,"Try Right"};
item18[] = {"Found_Path",2,250,500.000000,-125.000000,600.000000,-75.000000,0.000000,"Found" \n "Path"};
item19[] = {"Followed_Path_",4,218,275.000000,-275.000000,375.000000,-225.000000,3.000000,"Followed" \n "Path?"};
item20[] = {"Follow_Path",4,218,500.000000,-25.000000,600.000000,25.000000,0.000000,"Follow" \n "Path"};
item21[] = {"Find_Path_Failed",4,218,100.000000,-50.000000,200.000000,0.000000,1.000000,"Find Path" \n "Failed?"};
item22[] = {"Path__Clear_",4,218,275.000000,25.000000,375.000000,75.000000,2.000000,"Path " \n "Clear?"};
item23[] = {"Gate_",4,218,500.000000,-225.000000,600.000000,-175.000000,1.000000,"Gate?"};
item24[] = {"Target_Indoors_",4,218,-175.000000,0.000000,-75.000000,50.000000,1.000000,"Target" \n "Indoors?"};
item25[] = {"Find_Entry",2,250,-250.000000,100.000000,-150.000000,150.000000,0.000000,"Find" \n "Entry"};
item26[] = {"Found_Entry_",4,218,-250.000000,200.000000,-150.000000,250.000000,0.000000,"Found" \n "Entry?"};
item27[] = {"All_Paths_Failed",4,218,275.000000,-125.000000,375.000000,-75.000000,2.000000,"All Paths" \n "Failed?"};
item28[] = {"No_entry_",4,218,-325.000000,0.000000,-225.000000,50.000000,1.000000,"No entry?"};
item29[] = {"Not__Server_",4,218,-850.000000,-250.000000,-750.000000,-200.000000,1.000000,"Not " \n "Server?"};
link0[] = {0,2};
link1[] = {0,11};
link2[] = {2,9};
link3[] = {3,4};
link4[] = {3,29};
link5[] = {4,0};
link6[] = {5,9};
link7[] = {6,7};
link8[] = {7,8};
link9[] = {8,9};
link10[] = {9,5};
link11[] = {9,6};
link12[] = {9,10};
link13[] = {9,11};
link14[] = {9,13};
link15[] = {9,15};
link16[] = {9,24};
link17[] = {10,0};
link18[] = {11,12};
link19[] = {13,9};
link20[] = {14,16};
link21[] = {14,17};
link22[] = {14,19};
link23[] = {14,21};
link24[] = {14,27};
link25[] = {15,14};
link26[] = {16,18};
link27[] = {17,18};
link28[] = {18,19};
link29[] = {18,20};
link30[] = {18,22};
link31[] = {18,23};
link32[] = {19,9};
link33[] = {20,18};
link34[] = {21,14};
link35[] = {22,9};
link36[] = {23,18};
link37[] = {24,25};
link38[] = {25,26};
link39[] = {25,28};
link40[] = {26,25};
link41[] = {27,18};
link42[] = {28,9};
link43[] = {29,12};
globals[] = {25.000000,1,0,0,0,640,480,3,226,6316128,1,-1024.025879,790.270935,682.481201,-658.253357,1770,1308,1};
window[] = {2,-1,-1,-1,-1,1469,242,1838,319,3,1788};
*//*%FSM</HEAD>*/
class FSM
{
  fsmName = "pogomansZombieLogic1.0";
  class States
  {
    /*%FSM<STATE "Idle">*/
    class Idle
    {
      name = "Idle";
      init = /*%FSM<STATEINIT""">*/"[nil,_zombie,rSWITCHMOVE,_idleAnim] call RE;" \n
       "_idleTime = time;"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "Dead_">*/
        class Dead_
        {
          priority = 6.000000;
          to="END";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"!alive _zombie"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "Has_Target_">*/
        class Has_Target_
        {
          priority = 0.000000;
          to="Chase";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"_zTarget = _zombie findNearestEnemy _zombie;" \n
           "!isNull _zTarget"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/"_attackRange = 2;" \n
           "if !(_zTarget isKindOf ""man"") then { _attackRange = 4; }; " \n
           "_time = time;" \n
           "_entryPos = [];"/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "START">*/
    class START
    {
      name = "START";
      init = /*%FSM<STATEINIT""">*/""/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "Not__Server_">*/
        class Not__Server_
        {
          priority = 1.000000;
          to="END";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"!isServer"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "_">*/
        class _
        {
          priority = 0.000000;
          to="Idle";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/""/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/"_zombie = _this;" \n
           "_type = typeOf _zombie;" \n
           "_group = group _zombie;" \n
           "_runAnims = [""amovpercmevasnonwnondf"",""amovpercmrunsnonwnondf""];" \n
           "_attackAnim = ""AmovPercMrunSnonWnonDf_AmovPercMstpSnonWnonDnon_gthEnd"";" \n
           "_idleAnim = ""actspercmstpsnonwnondnon_talking03"";" \n
           "_normalAnim = ""amovpercmstpsnonwnondnon"";" \n
           "_walkAnim = ""AmovPercMwlkSnonWnonDf"";" \n
           "removeallweapons _zombie;" \n
           "_zombie setVariable [""BIS_noCoreConversations"", true];" \n
           """AwareFormationSoft"" enableAIFeature false;" \n
           """CombatFormationSoft"" enableAIFeature false;" \n
           "_group setBehaviour ""CARELESS"";" \n
           "_zombie setunitpos ""UP"";" \n
           "_zombie allowFleeing 0;" \n
           "_skillList = [""aimingAccuracy"",""aimingShake"",""aimingSpeed"",""endurance"",""spotDistance"",""spotTime"",""courage"",""reloadSpeed"",""commanding"",""general""];" \n
           " { _zombie setSkill [_x, 1]; } forEach _skillList;" \n
           "_zombie setskill 1;" \n
           "_zombie disableAI ""MOVE"";" \n
           "_zombie disableAI ""ANIM"";" \n
           "_zombie disableAI ""AUTOTARGET"";" \n
           "_zombie disableAI ""TARGET"";" \n
           "_zombie setDamage 0.9;" \n
           "_zombie setVariable [""damage"", 0];" \n
           "" \n
           "getDirTo = {" \n
           "	private ""_dirTo"";" \n
           "	_dirTo = [_this select 0, _this select 1] call BIS_fnc_dirTo;" \n
           "	if (_dirTo < 0) then {" \n
           "		_dirTo = 360 + _dirTo;" \n
           "	};" \n
           "	_dirTo	" \n
           "};" \n
           "" \n
           "getAngleDifference = {	" \n
           "	(((((_this select 0) - (_this select 1)) mod 360) + 540) mod 360) - 180" \n
           "};" \n
           "" \n
           "/* Uncomment to make zombies tougher." \n
           "_zombie addEventHandler [""HandleDamage"", {" \n
           "	_zombie = _this select 0;" \n
           "	_selection = _this select 1;" \n
           "	_damage = _this select 2;	" \n
           "	_shooter = _this select 3;" \n
           "	_zombie reveal _shooter;" \n
           "	_setDamage = _zombie getVariable ""damage"";" \n
           "	if (_selection == ""head_hit"" || _selection == ""body"") then { _setDamage = _setDamage + _damage*0.1; };" \n
           "	if (_selection == ""legs"" || _selection == ""arms"") exitWith { false };" \n
           "	if (_setDamage >= 1) then { _zombie setDamage 1; } else {" \n
           "		_zombie setVariable [""damage"", _setDamage];" \n
           "	};" \n
           "	false" \n
           "}];" \n
           "*/" \n
           "" \n
           "" \n
           ""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "Attack">*/
    class Attack
    {
      name = "Attack";
      init = /*%FSM<STATEINIT""">*/"[nil,_zombie,rSWITCHMOVE,_attackAnim] call RE;" \n
       "_time = time;"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "Hit_">*/
        class Hit_
        {
          priority = 0.000000;
          to="Chase";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"time - _time > 0.3"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/"_time = time;" \n
           "if (_zombie distance _zTarget <= _attackRange) then {" \n
           "	_zTarget setDamage (damage _zTarget + random 0.1);" \n
           "};"/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "Chase">*/
    class Chase
    {
      name = "Chase";
      init = /*%FSM<STATEINIT""">*/"_r = 0.1 + random 1;" \n
       "if (animationState _zombie == _walkAnim) then {" \n
       "	_zombie switchMove (_runAnims select (floor random count _runAnims));" \n
       "};"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "Dead_">*/
        class Dead_
        {
          priority = 6.000000;
          to="END";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"!alive _zombie"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "No_Target_">*/
        class No_Target_
        {
          priority = 5.000000;
          to="Idle";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"_nearestTarget = _zombie findNearestEnemy _zombie;" \n
           "if isNull _nearestTarget then { _nearestTarget = _zTarget; };" \n
           "_nearestTarget != _zTarget || !alive _zTarget || _zTarget distance _zombie > 200"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "Reached_Target_">*/
        class Reached_Target_
        {
          priority = 4.000000;
          to="Attack";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"_d = _zombie distance _zTarget;" \n
           "_d <= _attackRange && time - _time > _r"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/"_zombie setDir ([_zombie,_zTarget] call getDirTo);"/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "Attack_Finished">*/
        class Attack_Finished
        {
          priority = 3.000000;
          to="Chase";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"animationState _zombie == ""amovpercmrunsnonwnondf_amovpercmstpsnonwnondnon_gthend"" " \n
           "&& (_zombie distance _zTarget) > _attackRange"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/"_zombie switchMove (_runAnims select (floor random count _runAnims));"/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "Wrong_Direction">*/
        class Wrong_Direction
        {
          priority = 2.000000;
          to="Chase";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"_targetPos = _zTarget;" \n
           "if (count _entryPos > 0) then {" \n
           "	if (count (_entryPos findEmptyPosition [0.25,1,_type]) == 0) exitWith { _entryPos = []; };" \n
           "	if (_zombie distance _zTarget < _entryPos distance _zTarget) then {" \n
           "		_dirTo = [_zombie,_targetPos] call getDirTo;" \n
           "		_entryPos = [(_entryPos select 0) + sin _dirTo,(_entryPos select 1) + cos _dirTo,0];" \n
           "	};	" \n
           "	_targetPos = _entryPos; 	" \n
           "};" \n
           "_dirTo = [_zombie,_targetPos] call getDirTo;" \n
           "_zDir = getDir _zombie;" \n
           "_d =  _zombie distance _targetPos;" \n
           "_d = _d/30;" \n
           "if (_d > 1) then { _d = 0; } else { _d = 5 - _d*5; };" \n
           "_diff = [_dirTo,_zDir] call getAngleDifference;" \n
           "abs(_diff) > (15 - _d) " \n
           "" \n
           "" \n
           ""/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/"_diff = _diff/3;" \n
           "if (abs(_diff) > 15) then { _diff = _diff*(15/abs(_diff)); };" \n
           "_zombie setDir (_zDir + _diff);" \n
           "" \n
           "" \n
           "" \n
           ""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "Target_Indoors_">*/
        class Target_Indoors_
        {
          priority = 1.000000;
          to="Find_Entry";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"if (count _entryPos > 0) exitWith {};" \n
           "if (count (getPosATL _zombie findEmptyPosition [0.25,1,_type]) == 0) exitWith {};" \n
           "_tPos = getPosATL _zTarget;" \n
           "_tPos set[2, 0];" \n
           "count (_tPos findEmptyPosition [0.5,2,_type]) == 0"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/"_build = nearestBuilding _zTarget;" \n
           "_done = false;" \n
           "_i = -1;" \n
           "_entryPos = [0,0,0];"/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "Path_Blocked_">*/
        class Path_Blocked_
        {
          priority = 0.000000;
          to="Find_Path";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"if (_zombie distance _zTarget <= _attackRange) exitWith {};" \n
           "_tPos = getPosATL _zTarget;" \n
           "if (count _entryPos > 0) then {" \n
           "	_tPos = _entryPos;" \n
           "};" \n
           "if (_tPos select 2 > 1 && false) exitWith {" \n
           "	if (animationState _zombie != _idleAnim) then {" \n
           "		_zombie switchMove _idleAnim;" \n
           "	};" \n
           "};" \n
           "_zPos = getPosATL _zombie;" \n
           "if (count (_zPos findEmptyPosition [0.25,1,_type]) == 0) exitWith { " \n
           "	if (animationState _zombie == _idleAnim) then {" \n
           "		_zombie switchMove (_runAnims select (floor random count _runAnims));" \n
           "	};" \n
           "};" \n
           "_tPos set[2, 0];_f = [];" \n
           "_dirTo = [_zombie,_zTarget] call getDirTo;" \n
           "_pos = _zPos;" \n
           "_incX = sin (_dirTo)*0.5;" \n
           "_incY = cos (_dirTo)*0.5;" \n
           "_phase = 0;" \n
           "_dist = _zPos distance _tPos;	" \n
           "_clearPos = _pos;" \n
           "" \n
           "while { _pos distance _zPos < _dist } do {		" \n
           "	_pos = [(_pos select 0) + _incX,(_pos select 1) + _incY, 0];		" \n
           "	if (_phase == 1 && count (_pos findEmptyPosition [1,0,_type]) != 0) then { _phase = 2; };" \n
           "	if (_phase == 2 && count (_pos findEmptyPosition [0.5,0,_type]) == 0) exitWith { " \n
           "		_pos = [(_pos select 0) - _incX*2,(_pos select 1) - _incY*2, 0];		" \n
           "	};" \n
           "	if (_phase == 0 && count (_pos findEmptyPosition [0.5,0,_type]) == 0) then {" \n
           "		_phase = 1; " \n
           "		_men = _pos nearEntities[""Man"",1.5];	" \n
           "		if (count _men > 0) then {" \n
           "			_man = _men select 0;" \n
           "			if ((_man == _zTarget && count (_tPos findEmptyPosition [0.5,0,_type]) == 0)" \n
           "			|| count (_pos isFlatEmpty [0.1,0,0,0,0,false,_man]) > 0  || count _men > 1) then {" \n
           "				_phase = 0;" \n
           "			};" \n
           "		};		" \n
           "	};	" \n
           "" \n
           "	if (_phase == 0) then { _clearPos = _pos; };" \n
           "	if (count _entryPos == 0) then {" \n
           "		_tPos = getPosATL _zTarget;" \n
           "		_tPos set[2, 0];" \n
           "	};" \n
           "};" \n
           "" \n
           "if (_phase == 0 && animationState _zombie == _idleAnim) then {" \n
           "	_zombie switchMove (_runAnims select (floor random count _runAnims));" \n
           "};" \n
           "" \n
           "_phase > 0" \n
           "	"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/"_failed = false;"/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "END">*/
    class END
    {
      name = "END";
      init = /*%FSM<STATEINIT""">*/""/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "Find_Path">*/
    class Find_Path
    {
      name = "Find_Path";
      init = /*%FSM<STATEINIT""">*/"_maxDistance = 1;" \n
       "_maxAngle = 180;" \n
       "_posLeftList = [_clearPos];" \n
       "_posRightList = [_clearPos];" \n
       "_leftFailed = false;" \n
       "_rightFailed = false;" \n
       "_d1 = -1;" \n
       "_targetPos = _zPos;" \n
       "_i = -2;" \n
       "_pathList = [];" \n
       "_doubleStart = count (_clearPos findEmptyPosition [0.5,0,_type]) == 0;" \n
       "_zombie switchMove _walkAnim;" \n
       ""/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "Followed_Path_">*/
        class Followed_Path_
        {
          priority = 3.000000;
          to="Chase";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"_d2 = _zombie distance _targetPos;" \n
           "((_d2 < 0.5 || _d2 > _d1) && _i == (count _pathList - 1)) || _zombie distance _zTarget <= _attackRange || !alive _zombie"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "All_Paths_Failed">*/
        class All_Paths_Failed
        {
          priority = 2.000000;
          to="Found_Path";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"_leftFailed && _rightFailed && _dirTo <= 0"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/"_pathList = _posLeftList;" \n
           "if (count _posLeftList < count _posRightList) then { _pathList = _posRightList; };" \n
           "_i = -1;" \n
           "_checkedGate = false;" \n
           "_time = time;"/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "Find_Path_Failed">*/
        class Find_Path_Failed
        {
          priority = 1.000000;
          to="Find_Path";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"_leftFailed && _rightFailed"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/"{ deletevehicle _x } forEach _f;" \n
           "_failed = true;" \n
           "_dirTo = _dirTo - 60;" \n
           "_zPos = getPosATL _zombie;" \n
           "_pos = _zPos;" \n
           "_incX = sin (_dirTo)*0.5;" \n
           "_incY = cos (_dirTo)*0.5;" \n
           "_phase = 0;	" \n
           "_clearPos = _pos;" \n
           "" \n
           "while { true } do {		" \n
           "	_pos = [(_pos select 0) + _incX,(_pos select 1) + _incY, 0];		" \n
           "	if (_phase == 1 && _pos distance _zPos > 20 && count (_pos findEmptyPosition [1,0,_type]) != 0) then { _phase = 2; };" \n
           "	if (_phase == 2 && count (_pos findEmptyPosition [0.5,0,_type]) == 0) exitWith { " \n
           "		_pos = [(_pos select 0) - _incX*2,(_pos select 1) - _incY*2, 0];		" \n
           "	};" \n
           "	if (_phase == 0 && count (_pos findEmptyPosition [0.5,0,_type]) == 0) then {" \n
           "		_phase = 1; " \n
           "		_men = _pos nearEntities[""Man"",1.5];	" \n
           "		if (count _men > 0) then {" \n
           "			_man = _men select 0;" \n
           "			if (count (_pos isFlatEmpty [0.1,0,0,0,0,false,_man]) > 0  || count _men > 1) then {" \n
           "				_phase = 0;" \n
           "			};" \n
           "		};		" \n
           "	};	" \n
           "	if (_phase == 0) then { _clearPos = _pos; };" \n
           "};"/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "Try_Right">*/
        class Try_Right
        {
          priority = 0.000000;
          to="Found_Path";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"if (count _posRightList > 50 || _rightFailed) exitWith { _rightFailed = true; };" \n
           "_indexRight = count _posRightList - 1;" \n
           "_prevPosRight = _posRightList select _indexRight;" \n
           "_posRight = _prevPosRight;" \n
           "_dirToRight = [_posRight, _pos] call getDirTo;" \n
           "_dirToRight = _dirTo;" \n
           "_dirRightInc = 0;" \n
           "_boolRight = false;" \n
           "" \n
           "while { _posRight distance _prevPosRight <= _maxDistance && _dirRightInc <= _maxAngle && !_boolRight } do {" \n
           "	_boolRight = false;			" \n
           "	_incX = sin (_dirToRight + _dirRightInc)*0.25;" \n
           "	_incY = cos (_dirToRight + _dirRightInc)*0.25;	" \n
           "	_exit = false;" \n
           "	if (_doubleStart && count _posRightList == 1) then { _posRight = [(_posRight select 0) + _incX*3,(_posRight select 1) + _incY*3, 0]; };" \n
           "	while { _posRight distance _prevPosRight <= _maxDistance && !_boolRight } do {" \n
           "		_posRight = [(_posRight select 0) + _incX,(_posRight select 1) + _incY, 0];" \n
           "		if  (count ( _posRight findEmptyPosition [0.5,0,_type]) == 0) then {			" \n
           "			_exit = true;" \n
           "			_men = _posRight nearEntities[""Man"",1.5];		" \n
           "			if (count _men > 0) then {" \n
           "				_man = _men select 0;" \n
           "				_exit = count (_posRight isFlatEmpty [0.1,0,0,0,0,false,_man]) == 0" \n
           "				&& count _men == 1;" \n
           "			};				" \n
           "		};" \n
           "		_objs =  nearestObjects[_posRight,[""building""],1.5];" \n
           "		if (count _objs > 0) then {" \n
           "			if (count _posRightList > 1 && count nearestObjects[_prevPosRight,[""building""], 1.5] > 0) exitWith {player groupchat ""ignored"";};" \n
           "			_obj = _objs select 0;" \n
           "			_config = configFile >> ""CfgVehicles"" >> typeof _obj >> ""UserActions"";" \n
           "			if (count _config != 0) then { " \n
           "				if (toArray getText(_config select 0 >> ""statement"") find (toArray ""D"" select 0) == -1) exitWith {};" \n
           "				_posRight = getPosATL _obj;" \n
           "				_posRightList = _posRightList + [_posRight];" \n
           "				_posRight = _obj modelToWorld [0,3,0];" \n
           "				if (_posRight distance _zombie < (_obj modelToWorld [0,-3,0]) distance _zombie) then {" \n
           "					_posRight = _obj modelToWorld [0,-3,0];" \n
           "				};" \n
           "				_posRight set [2, 0];" \n
           "				_dirRightInc = 0;" \n
           "				_exit = false;" \n
           "			};" \n
           "		};		" \n
           "		if _exit exitWith { if (_dirRightInc < _maxAngle) then { _posRight = _prevPosRight; }; };		" \n
           "		_boolRight = true;	" \n
           "		if (!_failed && _posRight distance _zTarget < _pos distance _zTarget) exitWith {};	" \n
           "		_newDirToRight = [_posRight,_pos] call getDirTo;" \n
           "		_incX2 = sin (_newDirToRight)*0.5;" \n
           "		_incY2 = cos (_newDirToRight)*0.5;" \n
           "		_posToTarget = _posRight;" \n
           "		_dist = _posRight distance _pos;" \n
           "		while { _dist - (_posToTarget distance _posRight) > 0.1  && _boolRight  } do {" \n
           "			_posToTarget = [(_posToTarget select 0) + _incX2,(_posToTarget select 1) + _incY2, 0];" \n
           "			if (count (_posToTarget findEmptyPosition [0.5,0,_type]) == 0) then { " \n
           "				_boolRight = false;" \n
           "				_men = _posToTarget nearEntities[""Man"",1.5];		" \n
           "				if (count _men > 0) then {" \n
           "					_man = _men select 0;" \n
           "					_tPos = getPosATL _zTarget;" \n
           "					_tPos set[2, 0];" \n
           "					if ((_man == _zTarget && count (_tPos findEmptyPosition [0.5,0,_type]) == 0)" \n
           "					|| count (_posToTarget isFlatEmpty [0.1,0,0,0,0,false,_man]) > 0 || count _men > 1) then {" \n
           "						_boolRight = true;" \n
           "					};" \n
           "				};" \n
           "			};" \n
           "		};					" \n
           "	};	" \n
           "	_dirRightInc = _dirRightInc + 1;" \n
           "};" \n
           "" \n
           "if (_dirRightInc > _maxAngle) then { " \n
           "	_rightFailed = true;" \n
           "} else {" \n
           "	_posRightList = _posRightList + [_posRight];" \n
           "};" \n
           "" \n
           "_boolRight"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/"_pathList = _posRightList;" \n
           "if (_entryPos select 0 != 0) then {" \n
           "	_pathList = _pathList + [_entryPos] +  [getPosATL _zTarget];" \n
           "};" \n
           "if (count _pathList == 2) then { _pathList = _pathList + [_pos]; };" \n
           "_failed = false;" \n
           "_i = -1;" \n
           "_checkedGate = false;"/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "Try_Left">*/
        class Try_Left
        {
          priority = 0.000000;
          to="Found_Path";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"if (count _posLeftList > 50 || _leftFailed) exitWith { _leftFailed = true; };" \n
           "_indexLeft = count _posLeftList - 1;" \n
           "_prevPosLeft = _posLeftList select _indexLeft;" \n
           "_posLeft = _prevPosLeft;" \n
           "_dirToLeft = [_posLeft, _pos] call getDirTo;" \n
           "_dirToLeft = _dirTo;" \n
           "_dirLeftInc = 0;" \n
           "_boolLeft = false;" \n
           "" \n
           "while { _posLeft distance _prevPosLeft < _maxDistance && _dirLeftInc <= _maxAngle && !_boolLeft } do {" \n
           "	_boolLeft = false;		" \n
           "	_incX = sin (_dirToLeft - _dirLeftInc)*0.25;" \n
           "	_incY = cos (_dirToLeft - _dirLeftInc)*0.25;	" \n
           "	_exit = false;" \n
           "	if (_doubleStart && count _posLeftList == 1) then { _posLeft = [(_posLeft select 0) + _incX*3,(_posLeft select 1) + _incY*3, 0]; };" \n
           "	while { _posLeft distance _prevPosLeft <= _maxDistance && !_boolLeft } do {" \n
           "		_posLeft = [(_posLeft select 0) + _incX,(_posLeft select 1) + _incY, 0];	" \n
           "		if  (count (_posLeft findEmptyPosition [0.5,0,_type]) == 0) then {" \n
           "			_exit = true;" \n
           "			_men = _posLeft nearEntities[""Man"",1.5];		" \n
           "			if (count _men > 0) then {" \n
           "				_man = _men select 0;" \n
           "				_exit = count (_posLeft isFlatEmpty [0.1,0,0,0,0,false,_man]) == 0" \n
           "				 && count _men == 1;" \n
           "			};				" \n
           "		};" \n
           "		_objs =  nearestObjects[_posLeft,[""building""],1.5];" \n
           "		if (count _objs > 0) then {" \n
           "			if (count _posLeftList > 1 && count nearestObjects[_prevPosLeft,[""building""],1.5] > 0) exitWith {};" \n
           "			_obj = _objs select 0;" \n
           "			_config = configFile >> ""CfgVehicles"" >> typeof _obj >> ""UserActions"";" \n
           "			if (count _config != 0) then { " \n
           "				if (toArray getText(_config select 0 >> ""statement"") find (toArray ""D"" select 0) == -1) exitWith {};" \n
           "				_posLeft = getPosATL _obj;" \n
           "				_posLeftList = _posLeftList + [_posLeft];" \n
           "				_posLeft = _obj modelToWorld [0,3,0];" \n
           "				if (_posLeft distance _zombie < (_obj modelToWorld [0,-3,0]) distance _zombie) then {" \n
           "					_posLeft = _obj modelToWorld [0,-3,0];" \n
           "				};" \n
           "				_posLeft set [2, 0];" \n
           "				_dirLeftInc = 0;" \n
           "				_exit = false;" \n
           "			};" \n
           "		};" \n
           "		if _exit exitWith { if (_dirLeftInc < _maxAngle) then{ _posLeft = _prevPosLeft; }; };" \n
           "		_boolLeft = true;" \n
           "		if (!_failed && _posLeft distance _zTarget < _pos distance _zTarget) exitWith {};	" \n
           "		_newDirTo = [_posLeft,_pos] call getDirTo;" \n
           "		_incX2 = sin (_newDirTo)*0.5;" \n
           "		_incY2 = cos (_newDirTo)*0.5;" \n
           "		_posToTarget = _posLeft;" \n
           "		_dist = _posLeft distance _pos;" \n
           "		while { _dist - (_posToTarget distance _posLeft) > 0.1 && _boolLeft } do {	" \n
           "			_posToTarget = [(_posToTarget select 0) + _incX2,(_posToTarget select 1) + _incY2, 0];	" \n
           "			if (count (_posToTarget findEmptyPosition [0.5,0,_type]) == 0) then { " \n
           "				_boolLeft = false;" \n
           "				_men = _posToTarget nearEntities[""Man"",1.5];		" \n
           "				if (count _men > 0) then {" \n
           "					_man = _men select 0;" \n
           "					_tPos = getPosATL _zTarget;" \n
           "					_tPos set[2, 0];" \n
           "					if ((_man == _zTarget && count (_tPos findEmptyPosition [0.5,0,_type]) == 0)" \n
           "					|| count (_posToTarget isFlatEmpty [0.1,0,0,0,0,false,_man]) > 0 || count _men > 1) then {" \n
           "						_boolLeft = true;" \n
           "					};" \n
           "				};" \n
           "			};			" \n
           "		};			" \n
           "	};	" \n
           "	_dirLeftInc = _dirLeftInc + 1;" \n
           "};" \n
           "" \n
           "if (_dirLeftInc > _maxAngle) then { " \n
           "	_leftFailed = true;" \n
           "} else {" \n
           "	_posLeftList = _posLeftList + [_posLeft];" \n
           "};" \n
           "" \n
           "_boolLeft"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/"_pathList = _posLeftList;" \n
           "if (_entryPos select 0 != 0) then {" \n
           "	_pathList = _pathList + [_entryPos] +  [getPosATL _zTarget];" \n
           "};" \n
           "if (count _pathList == 2) then { _pathList = _pathList + [_pos]; };" \n
           "_failed = false;" \n
           "_i = -1;" \n
           "_checkedGate = false;" \n
           "" \n
           "" \n
           ""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "Found_Path">*/
    class Found_Path
    {
      name = "Found_Path";
      init = /*%FSM<STATEINIT""">*/"_i = _i + 1;" \n
       "_targetPos = _pathList select _i;" \n
       "_zombie setDir ([_zombie,_targetPos] call getDirTo);" \n
       "_d1 = _zombie distance _targetPos;" \n
       "{ deletevehicle _x } forEach _f;" \n
       "" \n
       ""/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "Followed_Path_">*/
        class Followed_Path_
        {
          priority = 3.000000;
          to="Chase";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"_d2 = _zombie distance _targetPos;" \n
           "((_d2 < 0.5 || _d2 > _d1) && _i == (count _pathList - 1)) || _zombie distance _zTarget <= _attackRange || !alive _zombie"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "Path__Clear_">*/
        class Path__Clear_
        {
          priority = 2.000000;
          to="Chase";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"if (_entryPos select 0 != 0) exitWith {};" \n
           "_dirTo = [_zombie,_zTarget] call getDirTo;" \n
           "_zPos = getPosATL _zombie;" \n
           "_pos = _zPos;" \n
           "_incX = sin (_dirTo)*0.5;" \n
           "_incY = cos (_dirTo)*0.5;" \n
           "_bool = true;" \n
           "_tPos = getPosATL _zTarget;" \n
           "_tPos set[2, 0];" \n
           "_dist = _zPos distance _tPos;" \n
           "" \n
           "while { _pos distance _zPos < _dist && _bool } do {	" \n
           "	_pos = [(_pos select 0) + _incX,(_pos select 1) + _incY, 0];	" \n
           "	if (count (_pos findEmptyPosition [0.5,0,_type]) == 0) then { " \n
           "		_bool = false; " \n
           "		_men = _pos nearEntities[""Man"",1.5];		" \n
           "		if (count _men > 0) then {" \n
           "			_man = _men select 0;" \n
           "			if (_man == _zTarget && count (_tPos findEmptyPosition [0.5,0,_type]) == 0) then {" \n
           "				_bool = true;" \n
           "			};" \n
           "		};	" \n
           "	};		" \n
           "	_tPos = getPosATL _zTarget;" \n
           "	_tPos set[2, 0];" \n
           "};" \n
           "" \n
           "_bool" \n
           ""/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/"if (animationState _zombie == _idleAnim) then { _zombie switchMove (_runAnims select (floor random count _runAnims)); };" \n
           ""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "Gate_">*/
        class Gate_
        {
          priority = 1.000000;
          to="Found_Path";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"if (_checkedGate || _i == (count _pathList - 1) || _zombie distance _targetPos > 2) exitWith {};" \n
           "_nextTargetPos = _pathList select (_i + 1);" \n
           "_objs = nearestObjects[_nextTargetPos,[""building""],1];" \n
           "private [""_config"",""_obj""];" \n
           "if (count _objs > 0) then {" \n
           "	_obj = _objs select 0;" \n
           "	_config = configFile >> ""CfgVehicles"" >> typeof _obj >> ""UserActions"";" \n
           "	count _config > 0" \n
           "} else { false }"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/"_statement = getText(_config select 0 >> ""statement"");" \n
           "_statement = toArray _statement;" \n
           "_statement set [0, toArray ""_"" select 0];" \n
           "_statement set [1, toArray ""o"" select 0];" \n
           "_statement set [2, toArray ""b"" select 0];" \n
           "_statement set [3, toArray ""j"" select 0];" \n
           "_index = _statement find (toArray "";"" select 0);" \n
           "if (_index < (count _statement - 1)) then {" \n
           "	_statement set [_index + 1, toArray ""_"" select 0];" \n
           "	_statement set [_index + 2, toArray ""o"" select 0];" \n
           "	_statement set [_index + 3, toArray ""b"" select 0];" \n
           "	_statement set [_index + 4, toArray ""j"" select 0];" \n
           "};	" \n
           "_statement = toString _statement;" \n
           "call compile _statement;" \n
           "_checkedGate = true;"/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "Follow_Path">*/
        class Follow_Path
        {
          priority = 0.000000;
          to="Found_Path";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"if (animationState _zombie == _walkAnim) then { _zombie switchMove (_runAnims select (floor random count _runAnims)); };" \n
           "_d2 = _zombie distance _targetPos;" \n
           "_d2 < 0.5 || _d2 > _d1" \n
           ""/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/"_checkedGate = false;"/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "Find_Entry">*/
    class Find_Entry
    {
      name = "Find_Entry";
      init = /*%FSM<STATEINIT""">*/""/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "No_entry_">*/
        class No_entry_
        {
          priority = 1.000000;
          to="Chase";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"isNull _build || _build distance _zTarget > 10 || _done"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/"player groupchat format[""%1,%2,%3"", _entryPos, _build, _build distance _zTarget];" \n
           "if (!_done || _entryPos select 0 == 0) then { _entryPos = []; };"/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "Found_Entry_">*/
        class Found_Entry_
        {
          priority = 0.000000;
          to="Find_Entry";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"_i = _i + 1;" \n
           "_buildExit = _build buildingExit _i;" \n
           "if (_buildExit select 0 != 0) then {" \n
           "	if (_zombie distance _buildExit < _zombie distance _entryPos) then {" \n
           "		_entryPos = _buildExit;" \n
           "	};" \n
           "	false" \n
           "} else { true }"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/"_done = true;"/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
  };
  initState="START";
  finalStates[] =
  {
    "END",
  };
};
/*%FSM</COMPILE>*/